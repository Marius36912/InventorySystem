README.md — InventorySystemRobotControl
## aflevering 7
# InventorySystemRobotControl  
Aflevering – Industriel Programmering (Uge 6 + 7)

## Projektoversigt
Dette projekt kombinerer et **Inventory System** (uge 6) med **robotstyring** (uge 7) i C# og avalonia gui

Uge 6: Lagerstyring og GUI
Uge 7: Udvidelse med når en ordre behandles, sender programmet ur script ti lur sim
Robotten henter op til tre varer fra A,B,C og placerer i S
Jeg satte docker og image op med temrinalen
- Docker Desktop med image `universalrobots/ursim_e-series`

## Her er min Port mapping taget fra terminal
| Funktion | Port |
|-----------|------|
| VNC (interface) | 6080 |
| Dashboard | 29999 |
| URScript (stream) | 30002 |

## Kørselstrin vejledning
### Start URSim i Docker
```bash
docker run -d --name robot-simulator \
  -p 6080:6080 -p 29999:29999 -p 30002:30002 \
  -e ROBOT_MODEL=UR3 \
  universalrobots/ursim_e-series
Åbn URSim-pendant
http://localhost:6080/vnc.html?autoconnect=true 
Tryk Power On og start Brake Release (grøn). 
Valgfrit (dashboard kommandoer) eller run program i rider

printf "power on\n" | nc localhost 29999
printf "brake release\n" | nc localhost 29999
Kør appen fra Rider
1. Run i Rider og GUI starter.
2. Klik Process next order -> robot laver A til S, B til S, C til S pr. ordre
3. Tryk igen (≥ 2 ordrer = kravet “test med mindst to ordrer”).
4. GUI viser opdateret omsætning og flyttede ordrer.

## video
Viser:
1. URSim → Power On + Brake Release (grøn).
2. App startes i Rider.
3. Process next order × 3 → robot bygger A,B,C → S hver gang.
4. GUI viser kø, ordre og pris.

## ai brug
AI-brug:
Denne aflevering er udviklet med hjælp fra 
kilde: ChatGPT (OpenAI, 2025).
ChatGPT har været brugt som feedback og kodeassistent under arbejdet.
Konkret har jeg brugt AI til at:
Generere et grundskelet for Avalonia GUI og MVVM-struktur ud fra mine udarbejdede aktivities og noter fra timen.
Hjælpe med at rette build fejl og forstå bindinger i XAML, samt sparring med noter og pensum for besvarelse af aflevering.
Den har derudover givet forslag til kommentarer og forenkling af viewmodel koden.
Brugte også til read me og class diagram skelet, hvor jeg har skrevet om til eget sprog.
Jeg har selv skrevet og tilpasset al kode, gennemgået logikken,
og indsat mine egne danske kommentarer for at vise forståelse af pensum.
Jeg tager fuldt ansvar for den endelige kode, struktur og rapport.
Jeg er ansvarlig for den afleverede løsning.
